rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Spaces - users can read spaces they're members of
    match /spaces/{spaceId} {
      allow read: if request.auth != null && 
        (request.auth.uid in resource.data.memberIds || 
         request.auth.uid == resource.data.ownerId);
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId ||
         (request.auth.uid in request.resource.data.memberIds && 
          request.resource.data.memberIds.hasAll(resource.data.memberIds)));
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.ownerId;
    }
    
    // Entries - users can access entries in their spaces
    match /entries/{entryId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/spaces/$(resource.data.spaceId)) &&
        request.auth.uid in get(/databases/$(database)/documents/spaces/$(resource.data.spaceId)).data.memberIds;
      allow create: if request.auth != null;
    }
    
    // Space invitations
    match /spaceInvitations/{invitationId} {
      // Anyone can read invitations sent to their email
      allow read: if request.auth != null && 
        (request.auth.token.email == resource.data.invitedEmail ||
         request.auth.uid == resource.data.invitedBy);
      
      // Only space members can create invitations
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/spaces/$(request.resource.data.spaceId)) &&
        request.auth.uid in get(/databases/$(database)/documents/spaces/$(request.resource.data.spaceId)).data.memberIds;
      
      // Can update invitation (accept/reject) if you're the invited person
      allow update: if request.auth != null &&
        request.auth.token.email == resource.data.invitedEmail;
    }
    
    // Exchange rates - all authenticated users can read and write
    match /exchangeRates/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
}
